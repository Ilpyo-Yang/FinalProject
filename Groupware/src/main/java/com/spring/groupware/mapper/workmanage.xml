<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== 루트 엘리먼트 & 네임스페이스 설정 ==== -->
<mapper namespace="workmanage">
	
	<!-- == 업무등록 페이지에서 나의 할일 등록하기 == -->
	<insert id="workAddTodoEnd" parameterType="com.spring.groupware.workmanage.model.TodoVO">
		insert into tbl_todolist(tdno, fk_mbr_seq, subject, contents, deadline)
		values(seq_todolist_tdno.nextval, to_number(#{fk_mbr_seq}), #{subject}, #{contents}, to_date(#{deadline}))
	</insert>

	<!-- == 나의 할일 리스트 페이지 보여주기 (전체) == -->
	<select id="todoList" parameterType="String" resultType="com.spring.groupware.workmanage.model.TodoVO">
		select tdno, fk_mbr_seq, subject, contents, important, fk_statno
		    , to_char(registerday, 'yyyy-mm-dd') as registerday
		    , to_char(deadline, 'yyyy-mm-dd') as deadline
		from tbl_todolist
		where fk_mbr_seq = #{fk_mbr_seq} 
	</select>
	
	<!-- == 선택한 나의 할일 상세 보기 == -->
	<select id="showDetailTodo" parameterType="HashMap" resultType="com.spring.groupware.workmanage.model.TodoVO">
		select tdno, fk_mbr_seq, subject, contents, important, fk_statno
		    , to_char(registerday, 'yyyy-mm-dd') as registerday
		    , to_char(deadline, 'yyyy-mm-dd') as deadline
		from tbl_todolist
		where tdno = #{tdno} and fk_mbr_seq = #{fk_mbr_seq}
	</select>
	
	<!-- 업무 번호 채번해오기 -->
	<select id="getWorkno" resultType="String">
		select seq_workmanage_wmno.nextval as wmno
		from dual
	</select>
	
	
	<!-- 트랜잭션 처리 부분 시작 - 업무 등록 및 업무 관련 멤버 정보 등록 -->
	<!-- == 업무(요청,보고) 등록하기 == -->
	<insert id="workAddEnd" parameterType="com.spring.groupware.workmanage.model.WorkVO">
		insert into tbl_workmanage(wmno, fk_wtno, requester, receivers, referrers, subject, contents, deadline, fk_statno)
		values (to_number(#{wmno}), to_number(#{fk_wtno}), #{requester}, #{receivers}, #{referrers}, #{subject}, #{contents}, to_date(#{deadline}), to_number(#{fk_statno}))
	</insert>
	
	<!-- 업무에 해당하는 멤버 seq저장 -->
	<insert id="workAddMember" parameterType="com.spring.groupware.workmanage.model.WorkMemberVO">
		insert into tbl_workmanage_mbr(fk_wmno, fk_wrno, fk_mbr_seq)
		values (#{fk_wmno}, #{fk_wrno}, to_number(#{fk_mbr_seq}))	
	</insert>
	
	<!-- 첨부 파일이 있을 경우 파일 추가하는 부분 -->
	<insert id="workAddFile" parameterType="com.spring.groupware.workmanage.model.WorkFileVO">
		insert into tbl_wmaddfile (fileno, fk_wmno, fileName, orgFilename, fileSize)
		values (seq_wmaddfile_fileno.nextval, #{fk_wmno}, #{fileName}, #{orgFilename}, #{fileSize})
	</insert>
	<!-- 트랜잭션 처리 부분 끝-->
	
	
	<!-- == 업무(요청,보고) 리스트 조회하기 == -->
	<select id="workList" parameterType="HashMap" resultType="com.spring.groupware.workmanage.model.WorkVO">
		select wmno, fk_wtno, requester, receivers, subject, fk_statno, checkstatus
		    , to_char(registerday, 'yyyy-mm-dd') as registerday
		    , to_char(deadline, 'yyyy-mm-dd') as deadline
		    , to_date(to_char(sysdate, 'yyyy-mm-dd')) - to_date(to_char(deadline, 'yyyy-mm-dd')) as delayday
		from tbl_workmanage
		where fk_wtno = #{fk_wtno}
		and wmno in(
		    select fk_wmno
		    from tbl_workmanage_mbr
		    where fk_wrno = #{fk_wrno} and fk_mbr_seq = #{fk_mbr_seq} and yn = 0
		)		
	</select>
	
	<!-- == 선택한 업무(요청,보고) 상세 보기 == -->
	<select id="showDetailWork" parameterType="HashMap" resultType="com.spring.groupware.workmanage.model.WorkVO">
		select wmno, fk_wtno, requester, receivers, subject, fk_statno, contents
		    , to_char(registerday, 'yyyy-mm-dd') as registerday
		    , to_char(deadline, 'yyyy-mm-dd') as deadline
		    , to_char(lasteditdate, 'yyyy-mm-dd hh24:mi:ss') as lasteditdate
		    , to_date(to_char(sysdate, 'yyyy-mm-dd')) - to_date(to_char(deadline, 'yyyy-mm-dd')) as delayday
		from tbl_workmanage
		where wmno = #{wmno}
	</select>
	
	<!-- == 페이징 처리 - 총 게시물 건수 가져오기 (검색이 있을 경우와 없을 경우 모두에 대해서 처리)== -->
	<select id="getTotalCount" parameterType="HashMap" resultType="int">
		select count(*) as totalCount
		from tbl_workmanage
		where fk_wtno = #{fk_wtno}
		and wmno in (
		    select fk_wmno
		    from tbl_workmanage_mbr
		    where fk_mbr_seq = #{fk_mbr_seq} and fk_wrno = #{fk_wrno} and yn = 0
		)
		<if test='str_workStatus != ""'>
			and fk_statno in 
			<foreach collection="fk_statno" item="statno" separator="," open="(" close=")">
			#{statno}
			</foreach>
		</if>
		<if test='searchWord != ""'>
		and lower(${searchType}) like '%'|| lower(#{searchWord}) ||'%'
		</if>
		<if test='registerday != ""'>
		and registerday &gt;= #{registerday}
		</if>
		<if test='deadline != ""'>
		and deadline &lt;= #{deadline}
		</if>
	</select>
	
	
	<select id="memberSearchShow"  parameterType="HashMap" resultType="com.spring.groupware.member.model.MemberVO">
		select mbr_seq, mbr_name
		from tbl_mbr
		where mbr_name like '%' || #{searchWord} || '%'
	</select>
	
	
	<!-- 마감일자지난 업무상태 변경 -->
	<update id="updateWorkStatusByTime" parameterType="HashMap">
		update tbl_workmanage set fk_statno = 0
		where fk_wtno = #{fk_wtno}
		and wmno in(
		    select fk_wmno
		    from tbl_workmanage_mbr
		    where fk_wrno = #{fk_wrno} and fk_mbr_seq = #{fk_mbr_seq}
		)	
		and to_date(to_char(deadline, 'yyyy-mm-dd')) &lt; to_date(to_char(sysdate, 'yyyy-mm-dd'))
	</update>

	<!-- 담당자들의 업무 정보 가져오기  -->	
	<select id="getWorkStatusEachMember" parameterType="String" resultType="com.spring.groupware.workmanage.model.WorkMemberVO">
		select fk_wmno, fk_mbr_seq, mbr_name, mbr_workpercent
		    , mbr_workPercent, to_char(lasteditdate, 'yyyy-mm-dd hh24:mi:ss') as lasteditdate
    		, mbr_readCheck, to_char(readcheckdate, 'yyyy-mm-dd hh24:mi:ss') as readcheckdate
		from tbl_workmanage_mbr left join tbl_mbr
		on fk_mbr_seq = mbr_seq
		where fk_wmno = #{wmno} and fk_wrno = 2 
	</select>
	
	<!-- 업무 수정하기 -->
	<update id="workEditEnd" parameterType="com.spring.groupware.workmanage.model.WorkVO">
		update tbl_workmanage 
		set subject = #{subject} , deadline = #{deadline} , contents = #{contents}
		where wmno = #{wmno}
	</update>
	
	<!-- 업무 삭제하기 -->
	<update id="workDel" parameterType="HashMap">
		update tbl_workmanage_mbr set yn = 1
		where fk_mbr_seq = #{userId} and fk_wrno = #{fk_wrno}
		and fk_wmno in 
		<foreach collection="wmnoList" item="wmno" separator="," open="(" close=")">
			#{wmno}
		</foreach>
	</update>
	
	<!-- 담당자 한명의 업무 정보 가져오기 -->
	<select id="oneMbrWorkStatus" parameterType="HashMap" resultType="com.spring.groupware.workmanage.model.WorkMemberVO">
		select fk_wmno, fk_wrno, fk_mbr_seq, mbr_workPercent, mbr_readCheck
		    , lasteditdate, readcheckdate, mbr_name
		from tbl_workmanage_mbr left join (select mbr_name, mbr_seq from tbl_mbr where mbr_seq = #{fk_mbr_seq}) on fk_mbr_seq = mbr_seq
		where fk_wmno = #{fk_wmno} and fk_mbr_seq = #{fk_mbr_seq} and fk_wrno = #{fk_wrno}	
	</select>
	
	<!-- 검색 조건을 가지고 검색하기 -->
	<select id="workListSearchWithPaging" parameterType="HashMap" resultType="com.spring.groupware.workmanage.model.WorkVO">
		select rno, wmno, fk_wtno, requester, receivers, subject, fk_statno, checkstatus
		       , registerday, deadline, delayday 
		from (
		    select rownum as rno
		            , wmno, fk_wtno, requester, receivers, subject, fk_statno, checkstatus
		            , registerday, deadline, delayday
		    from (
		        select wmno, fk_wtno, requester, receivers, subject, fk_statno, checkstatus
		            , to_char(registerday, 'yyyy-mm-dd') as registerday
		            , to_char(deadline, 'yyyy-mm-dd') as deadline
		            , to_date(to_char(sysdate, 'yyyy-mm-dd')) - to_date(to_char(deadline, 'yyyy-mm-dd')) as delayday
		        from tbl_workmanage
		        where fk_wtno = #{fk_wtno}
		        and wmno in(
		            select fk_wmno
		            from tbl_workmanage_mbr
		            where fk_wrno = #{fk_wrno} and fk_mbr_seq = #{fk_mbr_seq} and yn = 0
		        )
		        <if test='str_workStatus != ""'>
					and fk_statno in 
					<foreach collection="fk_statno" item="statno" separator="," open="(" close=")">
					#{statno}
					</foreach>
				</if>
				<if test='searchWord != ""'>
				and lower(${searchType}) like '%'|| lower(#{searchWord}) ||'%'
				</if>
				<if test='registerday != ""'>
				and registerday &gt;= #{registerday}
				</if>
				<if test='deadline != ""'>
				and deadline &lt;= #{deadline}
				</if>
		    )
		)
		where rno between #{startRno} and #{endRno}
	</select>
	
	<!-- 수신자가 읽었을 때 읽음확인 업데이트 하기  -->
	<update id="updateReadcheckdate" parameterType="HashMap">
		update tbl_workmanage_mbr set readcheckdate = sysdate
		where fk_wmno = #{wmno} and fk_wrno = #{fk_wrno} and fk_mbr_seq = #{fk_mbr_seq} and readcheckdate is null
	</update>
	
	<!-- 등록한 업무 수정시 수정한 날짜로 업데이트 하기 -->
	<update id="updateLasteditdate" parameterType="HashMap">
		update tbl_workmanage set lasteditdate = sysdate
		where wmno = #{wmno} 
	</update>
	
	<!-- 업무완료 클릭시 선택한 업무의 상태 완료로 변경하기 -->
	<update id="workStatusChangeToComplete" parameterType="HashMap">
		update tbl_workmanage set
		<if test="fk_wtno == 1">fk_statno = 2</if>
		<if test="fk_wtno == 2">fk_statno = 4</if>
		where wmno in 
		<foreach collection="wmnoList" item="wmno" separator="," open="(" close=")">
			#{wmno}
		</foreach>
	</update>
</mapper>